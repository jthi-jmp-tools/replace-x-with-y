Names Default To Here(1);

//Get utility functions
Include("bin/gui_utilities.jsl"); //or copy them directly here to make more standalone
Include("bin/replace_x_with_y.jsl");

//setup default settings
default_settings = ["GUI" => ["window_icon" => "OrderBy", "window_title" => "Replace X with Y", "keep_dialog_open" => 1]];
//load settings from file and get "final settings"
aa_settings = load_settings(default_settings, settings_file_name = "settings.json");

//check if the table is already open
check_open_window(aa_settings["GUI"]["window_title"]);

//check if any tables are open and set current datatable() as dt
dt = check_data_tables();

validator = function({clb_vals, to_replace, with_replace}, {Default Local},
	error_list = {};
	If(to_replace == "<change me>",
		Insert Into(error_list, "Replace X cannot be <change me>");
	);
	If(with_replace == "<disabled>",
		Insert Into(error_list, "With Y cannot be <disabled>");
	);
	If(N Items(clb_vals) < 1,
		Insert Into(error_list, "No columns selected for analysis");
	);
	If(N Items(error_list) > 0,
		nw = New Window("Error", <<modal, <<Set Window Icon("ErrorSmall"),
			H List Box(
				V Center Box(Icon Box("Error")), 
				Spacer Box(size(10, 1)), 
				V Center Box(Text Box(Concat Items(error_list, "\!N")))
			)
		);
		return(0);
	);
	return(1);
);

//modify run_expr which is executed when run button is pressed
run_expr = Expr(
	cur_window = Current Window();
	nw_aa = get_nw_values(Current Window());
	{x, y} = nw_aa["tebs"];
	cols_to_analyze = nw_aa["clbs"][1];
	missing_value_codes = nw_aa["cbs"][1];
	keep_dialog = nw_aa["cbs"][2];
	validator_value = validator(cols_to_analyze, x, y);
	If(validator_value,
		If(N Items(cols_to_analyze) > 0,
			If(missing_value_codes == 1 & (y == "" | y == "."),
				set_missing_value_code(dt, cols_to_analyze, x);
			, //else
				replace_x_with_y_in_column(dt, cols_to_analyze, x, y);
			);
		);
		If(keep_dialog == 0,
			cur_window << Close Window;
		);
	);
);

nw = New Window(aa_settings["GUI"]["window_title"], << show toolbars(0), << show menu(0),
	<<Set Window Icon(aa_settings["GUI"]["window_icon"]),
	V List Box(align("right"),
		Border Box(Sides(15), H Center Box(Text Box("Current Data Table(): " || (dt << get name), << Font Color("Blue")))),
		H List Box(
			V List Box(
				Panel Box("Select Columns", flc = Filter Col Selector(dt, nlines(10))),
				((flc << Parent) << Xpath("//IfBox")) << set(1), //enable filtering to filter col selector...
				Panel Box("Options",
					Lineup Box(N Col(2),
						Text Box("Replace X: "), teb_x = Text Edit Box("<change me>",
							<< Set Function(function({this},
								if(this << get text != "<change me>",
									((this << sib) << sib) << Enable(1),
									((this << sib) << sib) << Enable(0);
								);
							))
						), //if somethingf else besides <change me>
						Text Box("With Y: "), teb_y = Text Edit Box("<disabled>", << Enable(0),
							<< Set Function(function({this},
								if(this << get text == "" | this << get text == ".",
									((this << sib) << sib) << Enable(1),
									((this << sib) << sib) << Enable(0);
								);
							))
						),
						Text Box("Set Missing Value Codes\!Ninstead of replacing"), cb_missing_val = Check Box({""}, << Enable(0)),
					)
				)
			),
			Panel Box("Cast Selected Columns",
				Lineup Box(N Col(2),
					Button Box("Add",
						<< Set Function(function({this},
							(this << sib) << Append(((this << top parent) << XPath("//FilterColSelectorBox"))[1] << get selected)
						))
					),
					Col List Box(dt, min items(1), nlines(10)),
					Button Box("Clear Selection",
						<< Set Function(function({this}, 
							(((this << parent) << parent) << XPath("//ListBoxBox")) << Clear Selection;
						))
					),
					Button Box("Remove Selected",
						<< Set Function(function({this}, 
							(((this << parent) << parent) << XPath("//ListBoxBox")) << Remove Selected;
						))
					),
				)
			)
		),
		H List Box(align("center"),
			CheckBox({""}, << Set(aa_settings["GUI"]["keep_dialog_open"])),
			Text Box("Keep dialog open"),
			btn = Button Box("Run",
				run_expr;
			),
			Button Box("Close",
				Current Window() << Close Window;
			)
		)
	)
);
